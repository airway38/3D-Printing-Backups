########################################################
#
# Heavily modified macro from the clean_nozzle macro adapted for Midnite3DP Voron Bedpan
# https://github.com/midnite3dp/voron-bedpan
#
########################################################


[gcode_macro CLEAN_NOZZLE]

# User variables for wipe

variable_brush_start:         120         # Y start for brush wipe. Make wider than physical brush to allow filament clingon's to drop off    
variable_brush_sweep:         65          # Width of brush wipe. As above
variable_brush_centre:        180         # Y centre of brush for wipe
variable_brush_top:           2.0         # Nozzle mm height for wipe
variable_bucket_mount:        150         # Mount location   
variable_wipe_qty:            6           # Number of complete wipes

variable_travel_speed:		  350



# Constants for purging

variable_purge_len:           15          # mm to purge - purge more than necessary to account for ERCF and filament changes - only keeping this small as we do this in the advanced filament swap macro
variable_purge_spd:           260         # mm/min speed to purge
variable_purge_temp_min:      235         # minimum nozzle temp for purge - scrub only otherwise
variable_purge_ret:           1.0         # retract mm after purge to reduce oozing.  Need to be careful as jams can occur if retracting too far
variable_ooze_dwell:          3           # wait secs after purging and retracting
variable_clearance_z:         7           # safe travel height when not wiping
variable_prep_spd_xy:         7000        # *** N/A - set from my_variables motion_travel_speed for non wiping moves
variable_prep_spd_z:          1500        # z travel speed 
variable_wipe_spd_xy:         4800        # xy wipe speed
variable_bucket_pos:          1           # purge bucket target - 0 left, 1 right (Gets set randomally in macro)            

variable_bucket_left_width:   30          # Mirrored - righthand rail placement
variable_bucket_right_width:  30          # Mirrored - righthand rail placement  
#variable_bucket_left_width:  55          # Normal - lefthand rail placement
#variable_bucket_right_width: 30          # Normal - lefthand rail placement   
variable_bucket_gap:          0    

gcode:
   SAVE_GCODE_STATE NAME=clean_nozzle_state    # save gcode state 
   G90                                    # Absolute positioning

   {% set justwipe = params.WIPEONLY|default(0)|int %} # support wipe only option - default to full purge and wipe. Override with CLEAN_NOZZLE WIPEONLY=1

   _CG28 # conditional home

   # Randomise bin for purge - 0 left, 1 right
   SET_GCODE_VARIABLE MACRO=clean_nozzle VARIABLE=bucket_pos VALUE={(range(2) | random)}

   # Set Z for travel
   G1 Z{brush_top + clearance_z} F{prep_spd_z}
         
   # Position XY for purge. Calculate random bin starting point for purge
   #  G1 X{bucket_mount - ((bucket_gap + bucket_left_width) / 2) + ((bucket_gap + (bucket_left_width + bucket_right_width) / 2) * bucket_pos)} Y{brush_centre} F{prep_spd_xy}
      G1 X{bucket_mount - ((bucket_gap + bucket_left_width) / 2) + ((bucket_gap + (bucket_left_width + bucket_right_width) / 2) * bucket_pos)} Y{brush_centre} F{variable_travel_speed}
      # Purge if we arent just doing a wipe and nozzle > min temp. Small retract after to minimise oozing at 5x purge_spd. G4 dwell is in milliseconds so * 1000
      {% if justwipe == 0 %}
         {% if printer.extruder.temperature >= purge_temp_min %}
            M83      # relative mode
            G1 E{purge_len} F{purge_spd}
            G1 E-{purge_ret} F{purge_spd * 5}
            G4 P{ooze_dwell * 1000}
            G92 E0   # reset extruder
         {% endif %}
      {% endif %}
      
   # Start wiping - lower nozzle into brush
   G1 Z{brush_top} F{prep_spd_z}
   
   # Perform wipe. 
   # Wipe direction based off bucket_pos for cool random scrubby routine.
   {% for wipes in range(1, (wipe_qty + 1)) %}
      G1 X{brush_start + (brush_sweep * (1 - bucket_pos))} F{wipe_spd_xy}
      G1 X{brush_start + (brush_sweep * bucket_pos)} F{wipe_spd_xy}
   {% endfor %}
   G1 X{brush_start + (brush_sweep * (1 - bucket_pos))} F{wipe_spd_xy} # always finish at opposite end to start avoid picking up purge klingons
   
   # Done
   G1 Z{brush_top + clearance_z} F{prep_spd_z}

   # Restore the gcode state
   RESTORE_GCODE_STATE NAME=clean_nozzle_state